/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.20
 * Generated at: 2024-06-02 08:54:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.icp.gadgets.model.User;
import com.icp.gadgets.doa.Cartdoa;
import com.icp.gadgets.model.CartItem;
import java.util.List;
import com.icp.gadgets.model.Product;
import com.icp.gadgets.doa.ProductDoa;
import com.icp.gadgets.doa.ImageDoa;
import com.icp.gadgets.utils.Helper;

public final class featuredProduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(8);
    _jspx_imports_classes.add("com.icp.gadgets.model.CartItem");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.icp.gadgets.model.Product");
    _jspx_imports_classes.add("com.icp.gadgets.doa.ProductDoa");
    _jspx_imports_classes.add("com.icp.gadgets.model.User");
    _jspx_imports_classes.add("com.icp.gadgets.doa.Cartdoa");
    _jspx_imports_classes.add("com.icp.gadgets.utils.Helper");
    _jspx_imports_classes.add("com.icp.gadgets.doa.ImageDoa");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>s\r\n");
      out.write("    <title>Title</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/css/featuredProduct.style.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/global.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/css/shop.styles.css\">\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/script/toast.script.js\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/css/mostSellingProduct.styles.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        #add_to_cart_btn:hover {\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification {\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            z-index: 999999;\r\n");
      out.write("            max-width: 300px;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.12);\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            transform: translate(0, -150%);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification .toast-notification-wrapper {\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            padding-right: 10px;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification .toast-notification-wrapper .toast-notification-header {\r\n");
      out.write("            padding: 0 0 5px 0;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            word-break: break-all;\r\n");
      out.write("            color: #4f525a;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification .toast-notification-wrapper .toast-notification-content {\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            word-break: break-all;\r\n");
      out.write("            color: #4f525a;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification .toast-notification-close {\r\n");
      out.write("            appearance: none;\r\n");
      out.write("            border: none;\r\n");
      out.write("            background: transparent;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 24px;\r\n");
      out.write("            line-height: 24px;\r\n");
      out.write("            padding-bottom: 4px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification .toast-notification-close:hover {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-top-center {\r\n");
      out.write("            transform: translate(calc(50vw - 50%), -150%);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-bottom-left, .toast-notification.toast-notification-bottom-right {\r\n");
      out.write("            transform: translate(0, 150%);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-bottom-center {\r\n");
      out.write("            transform: translate(calc(50vw - 50%), 150%);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dark {\r\n");
      out.write("            background-color: #2d2e31;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dark .toast-notification-wrapper .toast-notification-header {\r\n");
      out.write("            color: #edeff3;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dark .toast-notification-wrapper .toast-notification-content {\r\n");
      out.write("            color: #edeff3;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dark .toast-notification-close {\r\n");
      out.write("            color: rgba(255, 255, 255, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dark .toast-notification-close:hover {\r\n");
      out.write("            color: rgba(255, 255, 255, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-success {\r\n");
      out.write("            background-color: #C3F3D7;\r\n");
      out.write("            border-left: 4px solid #51a775;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-success .toast-notification-wrapper .toast-notification-header {\r\n");
      out.write("            color: #51a775;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-success .toast-notification-wrapper .toast-notification-content {\r\n");
      out.write("            color: #51a775;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-success .toast-notification-close {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-success .toast-notification-close:hover {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-error {\r\n");
      out.write("            background-color: #f3c3c3;\r\n");
      out.write("            border-left: 4px solid #a75151;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-error .toast-notification-wrapper .toast-notification-header {\r\n");
      out.write("            color: #a75151;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-error .toast-notification-wrapper .toast-notification-content {\r\n");
      out.write("            color: #a75151;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-error .toast-notification-close {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-error .toast-notification-close:hover {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-verified {\r\n");
      out.write("            background-color: #d0eaff;\r\n");
      out.write("            border-left: 4px solid #6097b8;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-verified .toast-notification-wrapper .toast-notification-header {\r\n");
      out.write("            color: #6097b8;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-verified .toast-notification-wrapper .toast-notification-content {\r\n");
      out.write("            color: #6097b8;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-verified .toast-notification-close {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-verified .toast-notification-close:hover {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dimmed {\r\n");
      out.write("            opacity: .3;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dimmed:hover, .toast-notification.toast-notification-dimmed:active {\r\n");
      out.write("            opacity: 1;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

    User user = (User) session.getAttribute("user");
    String userId = session.getAttribute("userId") == null ? null : session.getAttribute("userId").toString();
    int cartSize = 0;
    if (user != null) {
        request.setAttribute("user", user);
        Cartdoa cartdoa = new Cartdoa();
        List<CartItem> cartItems = cartdoa.getCartItemByUserID(user.getId());
        cartSize = cartItems.size();
    }
    ProductDoa pd = new ProductDoa();
    List<Product> productList = pd.getAllProducts();
    ImageDoa img = new ImageDoa();
    Product mostSoldProduct = pd.getMostSellingProduct();
    System.out.println("Most sold product: " + mostSoldProduct);

      out.write("\r\n");
      out.write("<div class=\"container shadow my-5 \">\r\n");
      out.write("    <div class=\"row \">\r\n");
      out.write("        <div class=\"col-lg-12 text-center mb-4\">\r\n");
      out.write("            <h2 class=\"text-black fs-1 font-weight-bold mt-5\">Featured <span class=\"text-warning\">Product.</span></h2>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        ");

            if (!productList.isEmpty()) {
                // Limit rendering to first 4 products
                int count = 0;
                for (Product product : productList) {
                    if (count >= 4) break; // Exit loop after 4 products
                    count++;
        
      out.write("\r\n");
      out.write("        ");

            String imgPath = img.getImgURLByProductId(product.getProductId());
            String imgUri;
            if (imgPath == null) {
                imgUri = "../images/placeholder.png";
            }
            else {
                imgUri = request.getContextPath() +"/images/"+  new Helper().extractFileName(imgPath);
            }
        
      out.write("\r\n");
      out.write("        <div class=\"col-lg-3 col-md-6 col-sm-12 pb-1\"> <!-- Adjusted column size for 4 products -->\r\n");
      out.write("            <div class=\"card product-item border-0 mb-4\">\r\n");
      out.write("                <div class=\"card-header product-img position-relative overflow-hidden bg-transparent border p-0 \" style=\"cursor:pointer;\">\r\n");
      out.write("                    <img class=\"img-fluid \" style=\"width: 100%;height: 40vh; object-fit: cover\"  src=\"");
      out.print( imgUri );
      out.write("\" alt=");
      out.print(product.getProductName());
      out.write("\r\n");
      out.write("                            onError=\"this.onerror=null;this.src='../images/placeholder.png';\"\r\n");
      out.write("                    >\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-body border-left border-right text-center p-0 pt-4 pb-3\">\r\n");
      out.write("                    <h6 class=\"text-truncate mb-3\">");
      out.print( product.getProductName() );
      out.write("</h6>\r\n");
      out.write("                    <div class=\"d-flex justify-content-center\">\r\n");
      out.write("                        <h6>Rs. ");
      out.print( product.getProductPrice() );
      out.write("</h6>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-footer bg-light border\">\r\n");
      out.write("                    <div class=\"row\">\r\n");
      out.write("                        <div class=\"col-6\">\r\n");
      out.write("                            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pages/SingleProduct.jsp?productId=");
      out.print(product.getProductId());
      out.write("\" class=\"btn d-flex align-items-center px-2  py-1  gap-2 \" id=\"\" style=\"background:#ffc107;\">\r\n");
      out.write("                                <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/Icons/eye.png\" alt=\"carts\" style=\"width: 20px;height: 20px; \">\r\n");
      out.write("                                View Detail\r\n");
      out.write("                            </a>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"col-6\">\r\n");
      out.write("                            <button onclick=\"handleAddToCart(\r\n");
      out.write("                                ");
      out.print( userId );
      out.write(",\r\n");
      out.write("                                ");
      out.print( product.getProductId() );
      out.write(",\r\n");
      out.write("                                    1\r\n");
      out.write("                                    )\"  class=\"btn d-flex align-items-center px-2 py-1  gap-1 \" id=\"add_to_cart_btn\" style=\"background:#ffc107;\">\r\n");
      out.write("                                <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/Icons/shopping-bag.png\" alt=\"carts\" style=\"width: 20px;height: 20px;\">\r\n");
      out.write("                                Add To Cart\r\n");
      out.write("                            </button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        ");
 } else { 
      out.write("\r\n");
      out.write("        <div class=\"col-12\">\r\n");
      out.write("            <p>No products available</p>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 }
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"d-flex align-items-center justify-content-end mb-3\">\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pages/shop.jsp\" class=\"btn btn-warning btn-lg\">See more<span> . . .</span> </a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"row mb-5\">\r\n");
      out.write("    <div class=\"col-lg-12 text-center \">\r\n");
      out.write("        <h2 class=\"text-black fs-1 font-weight-bold mt-5\">Most Selling <span class=\"text-warning\">Product.</span></h2>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<section class=\"product\">\r\n");
      out.write("    <div class=\"product__photo\">\r\n");
      out.write("        <div class=\"photo-container\">\r\n");
      out.write("            <div class=\"photo-main\" style=\"padding: 5px; top: -4rem\">\r\n");
      out.write("                ");

                    String imgPath = img.getImgURLByProductId(mostSoldProduct.getProductId());
                    String imgUri;
                    if (imgPath == null) {
                        imgUri = "../images/placeholder.png";
                    }
                    else {
                        imgUri = request.getContextPath() +"/images/"+  new Helper().extractFileName(imgPath);
                    }
                
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <img src=\"");
      out.print(imgUri);
      out.write("\" alt=\"green apple slice\" style=\"top: -4rem; padding: 2px\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"product__info\">\r\n");
      out.write("        <div class=\"title\">\r\n");
      out.write("            <h1>\r\n");
      out.write("                ");
      out.print( mostSoldProduct.getProductName() );
      out.write("\r\n");
      out.write("            </h1>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"price\">\r\n");
      out.write("            RS ");
      out.print( mostSoldProduct.getProductPrice() );
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"description\">\r\n");
      out.write("            <h3>Features</h3>\r\n");
      out.write("\r\n");
      out.write("                <p>\r\n");
      out.write("                    ");
      out.print( mostSoldProduct.getProductDescription() );
      out.write("\r\n");
      out.write("                </p>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <button class=\"buy--btn\"\r\n");
      out.write("                onclick=\"handleAddToCart(\r\n");
      out.write("                    ");
      out.print( userId );
      out.write(",\r\n");
      out.write("                    ");
      out.print( mostSoldProduct.getProductId() );
      out.write(",\r\n");
      out.write("                    1\r\n");
      out.write("                    )\"\r\n");
      out.write("        >ADD TO CART</button>\r\n");
      out.write("    </div>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    const toasts = new Toasts({\r\n");
      out.write("        width: 300,\r\n");
      out.write("        timing: 'ease',\r\n");
      out.write("        duration: '.5s',\r\n");
      out.write("        dimOld: false,\r\n");
      out.write("        position: 'top-right' // top-left | top-center | top-right | bottom-left | bottom-center | bottom-right\r\n");
      out.write("    });\r\n");
      out.write("    function handleAddToCart(userId, productId, quantity) {\r\n");
      out.write("        let xhr = new XMLHttpRequest();\r\n");
      out.write("        xhr.open(\"POST\", '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/cart', true);\r\n");
      out.write("        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n");
      out.write("        xhr.onreadystatechange = function () {\r\n");
      out.write("            if (xhr.readyState === 4) {\r\n");
      out.write("                if (xhr.status === 200) {\r\n");
      out.write("                    fetchUpdatedCartSize(userId);\r\n");
      out.write("                    toasts.push({\r\n");
      out.write("                        title: 'Success',\r\n");
      out.write("                        content: 'Product added to cart',\r\n");
      out.write("                        style: 'success'\r\n");
      out.write("                    });\r\n");
      out.write("                } else if (xhr.status === 404) {\r\n");
      out.write("                    window.location.href = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pages/login.jsp';\r\n");
      out.write("                }else {\r\n");
      out.write("                    toasts.push({\r\n");
      out.write("                        title: 'Error',\r\n");
      out.write("                        content: 'Failed to add product to cart',\r\n");
      out.write("                        style: 'error'\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("        xhr.send('userId=' + userId + '&productId=' + productId + '&quantity=' + quantity);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function fetchUpdatedCartSize(userId){\r\n");
      out.write("        let xhr = new XMLHttpRequest();\r\n");
      out.write("        xhr.open(\"GET\", '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/cart?userId=' + userId, true);\r\n");
      out.write("        xhr.onreadystatechange = function () {\r\n");
      out.write("            if (xhr.readyState === 4) {\r\n");
      out.write("                if (xhr.status === 200) {\r\n");
      out.write("                    document.getElementById(\"cart_counter\").innerText = xhr.response;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("        xhr.send();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
