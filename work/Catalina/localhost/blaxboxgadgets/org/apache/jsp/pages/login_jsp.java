/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.20
 * Generated at: 2024-06-02 08:55:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.icp.gadgets.utils.StringUtils;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("com.icp.gadgets.utils.StringUtils");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Login</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../styles/css/login.css\">\r\n");
      out.write("    <script src=\"../script/toast.script.js\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        .toast-notification {\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            z-index: 999999;\r\n");
      out.write("            max-width: 300px;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.12);\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            transform: translate(0, -150%);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification .toast-notification-wrapper {\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            padding-right: 10px;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification .toast-notification-wrapper .toast-notification-header {\r\n");
      out.write("            padding: 0 0 5px 0;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            word-break: break-all;\r\n");
      out.write("            color: #4f525a;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification .toast-notification-wrapper .toast-notification-content {\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            word-break: break-all;\r\n");
      out.write("            color: #4f525a;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification .toast-notification-close {\r\n");
      out.write("            appearance: none;\r\n");
      out.write("            border: none;\r\n");
      out.write("            background: transparent;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 24px;\r\n");
      out.write("            line-height: 24px;\r\n");
      out.write("            padding-bottom: 4px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification .toast-notification-close:hover {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-top-center {\r\n");
      out.write("            transform: translate(calc(50vw - 50%), -150%);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-bottom-left, .toast-notification.toast-notification-bottom-right {\r\n");
      out.write("            transform: translate(0, 150%);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-bottom-center {\r\n");
      out.write("            transform: translate(calc(50vw - 50%), 150%);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dark {\r\n");
      out.write("            background-color: #2d2e31;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dark .toast-notification-wrapper .toast-notification-header {\r\n");
      out.write("            color: #edeff3;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dark .toast-notification-wrapper .toast-notification-content {\r\n");
      out.write("            color: #edeff3;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dark .toast-notification-close {\r\n");
      out.write("            color: rgba(255, 255, 255, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dark .toast-notification-close:hover {\r\n");
      out.write("            color: rgba(255, 255, 255, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-success {\r\n");
      out.write("            background-color: #C3F3D7;\r\n");
      out.write("            border-left: 4px solid #51a775;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-success .toast-notification-wrapper .toast-notification-header {\r\n");
      out.write("            color: #51a775;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-success .toast-notification-wrapper .toast-notification-content {\r\n");
      out.write("            color: #51a775;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-success .toast-notification-close {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-success .toast-notification-close:hover {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-error {\r\n");
      out.write("            background-color: #f3c3c3;\r\n");
      out.write("            border-left: 4px solid #a75151;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-error .toast-notification-wrapper .toast-notification-header {\r\n");
      out.write("            color: #a75151;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-error .toast-notification-wrapper .toast-notification-content {\r\n");
      out.write("            color: #a75151;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-error .toast-notification-close {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-error .toast-notification-close:hover {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-verified {\r\n");
      out.write("            background-color: #d0eaff;\r\n");
      out.write("            border-left: 4px solid #6097b8;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-verified .toast-notification-wrapper .toast-notification-header {\r\n");
      out.write("            color: #6097b8;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-verified .toast-notification-wrapper .toast-notification-content {\r\n");
      out.write("            color: #6097b8;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-verified .toast-notification-close {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-verified .toast-notification-close:hover {\r\n");
      out.write("            color: rgba(0, 0, 0, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dimmed {\r\n");
      out.write("            opacity: .3;\r\n");
      out.write("        }\r\n");
      out.write("        .toast-notification.toast-notification-dimmed:hover, .toast-notification.toast-notification-dimmed:active {\r\n");
      out.write("            opacity: 1;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"center\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"text\">Login Form</div>\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        ");

            String errorMessage = (String) request.getParameter(StringUtils.ERROR_MESSAGE);

            if (errorMessage != null && !errorMessage.isEmpty()) {
        
      out.write("\r\n");
      out.write("        <script>\r\n");
      out.write("            const toasts = new Toasts({\r\n");
      out.write("                width: 300,\r\n");
      out.write("                timing: 'ease',\r\n");
      out.write("                duration: '.5s',\r\n");
      out.write("                dimOld: false,\r\n");
      out.write("                position: 'top-right' // top-left | top-center | top-right | bottom-left | bottom-center | bottom-right\r\n");
      out.write("            });\r\n");
      out.write("            toasts.push({\r\n");
      out.write("                title:\"Error\",\r\n");
      out.write("                content:\"");
      out.print(errorMessage);
      out.write("\",\r\n");
      out.write("                style:'error'\r\n");
      out.write("            })\r\n");
      out.write("        </script>\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("        ");

            }
        
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        <form action=\"");
      out.print(request.getContextPath());
      out.write("/login-servlet\" method=\"post\">\r\n");
      out.write("            <div class=\"data\">\r\n");
      out.write("                <label>Username</label>\r\n");
      out.write("                <input type=\"text\" name=\"username\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"data\">\r\n");
      out.write("                <label>Password</label>\r\n");
      out.write("                <input type=\"password\" name=\"password\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"btn\">\r\n");
      out.write("                <div class=\"inner\"></div>\r\n");
      out.write("                <button type=\"submit\" style=\"background:  #f06412\">login</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"signup-link\">\r\n");
      out.write("                Not a member? <a href=\"register.jsp\">Register now</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/0b8996398e.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
